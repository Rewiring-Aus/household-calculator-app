/* tslint:disable */
/* eslint-disable */
/**
 * Household savings
 * This is the API for a household savings model. You can provide details about a household\'s energy use, and receive information about the household\'s potential emissions & cost savings from electrifying their fossil fuel machines, as well as the upfront costs of switching.
 *
 * The version of the OpenAPI document: 0.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The household's solar panel system
 * @export
 * @interface Solar
 */
export interface Solar {
    /**
     * Whether the household has solar
     * @type {boolean}
     * @memberof Solar
     */
    hasSolar: boolean;
    /**
     * The size of the solar panel system in kW. Should be null if hasSolar is False and installSolar is False.
     * @type {number}
     * @memberof Solar
     */
    size?: number;
    /**
     * Whether the household wants to install solar. Should be null if hasSolar is True.
     * @type {boolean}
     * @memberof Solar
     */
    installSolar?: boolean;
}

/**
 * Check if a given object implements the Solar interface.
 */
export function instanceOfSolar(value: object): value is Solar {
    if (!('hasSolar' in value) || value['hasSolar'] === undefined) return false;
    return true;
}

export function SolarFromJSON(json: any): Solar {
    return SolarFromJSONTyped(json, false);
}

export function SolarFromJSONTyped(json: any, ignoreDiscriminator: boolean): Solar {
    if (json == null) {
        return json;
    }
    return {
        
        'hasSolar': json['hasSolar'],
        'size': json['size'] == null ? undefined : json['size'],
        'installSolar': json['installSolar'] == null ? undefined : json['installSolar'],
    };
}

export function SolarToJSON(json: any): Solar {
    return SolarToJSONTyped(json, false);
}

export function SolarToJSONTyped(value?: Solar | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'hasSolar': value['hasSolar'],
        'size': value['size'],
        'installSolar': value['installSolar'],
    };
}

