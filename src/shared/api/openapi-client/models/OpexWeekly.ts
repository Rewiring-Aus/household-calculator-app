/* tslint:disable */
/* eslint-disable */
/**
 * Household savings
 * This is the API for a household savings model. You can provide details about a household\'s energy use, and receive information about the household\'s potential emissions & cost savings from electrifying their fossil fuel machines, as well as the upfront costs of switching.
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OpexWeeklyFixedCostsByFuelType } from './OpexWeeklyFixedCostsByFuelType';
import {
    OpexWeeklyFixedCostsByFuelTypeFromJSON,
    OpexWeeklyFixedCostsByFuelTypeFromJSONTyped,
    OpexWeeklyFixedCostsByFuelTypeToJSON,
    OpexWeeklyFixedCostsByFuelTypeToJSONTyped,
} from './OpexWeeklyFixedCostsByFuelType';
import type { OpexWeeklyOtherEnergyCostsByFuelType } from './OpexWeeklyOtherEnergyCostsByFuelType';
import {
    OpexWeeklyOtherEnergyCostsByFuelTypeFromJSON,
    OpexWeeklyOtherEnergyCostsByFuelTypeFromJSONTyped,
    OpexWeeklyOtherEnergyCostsByFuelTypeToJSON,
    OpexWeeklyOtherEnergyCostsByFuelTypeToJSONTyped,
} from './OpexWeeklyOtherEnergyCostsByFuelType';

/**
 * 
 * @export
 * @interface OpexWeekly
 */
export interface OpexWeekly {
    /**
     * 
     * @type {number}
     * @memberof OpexWeekly
     */
    gridVolumeCosts?: number;
    /**
     * 
     * @type {number}
     * @memberof OpexWeekly
     */
    otherEnergyCosts?: number;
    /**
     * 
     * @type {OpexWeeklyOtherEnergyCostsByFuelType}
     * @memberof OpexWeekly
     */
    otherEnergyCostsByFuelType?: OpexWeeklyOtherEnergyCostsByFuelType;
    /**
     * 
     * @type {number}
     * @memberof OpexWeekly
     */
    fixedCosts?: number;
    /**
     * 
     * @type {OpexWeeklyFixedCostsByFuelType}
     * @memberof OpexWeekly
     */
    fixedCostsByFuelType?: OpexWeeklyFixedCostsByFuelType;
    /**
     * 
     * @type {number}
     * @memberof OpexWeekly
     */
    revenueFromSolarExport?: number;
}

/**
 * Check if a given object implements the OpexWeekly interface.
 */
export function instanceOfOpexWeekly(value: object): value is OpexWeekly {
    return true;
}

export function OpexWeeklyFromJSON(json: any): OpexWeekly {
    return OpexWeeklyFromJSONTyped(json, false);
}

export function OpexWeeklyFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpexWeekly {
    if (json == null) {
        return json;
    }
    return {
        
        'gridVolumeCosts': json['gridVolumeCosts'] == null ? undefined : json['gridVolumeCosts'],
        'otherEnergyCosts': json['otherEnergyCosts'] == null ? undefined : json['otherEnergyCosts'],
        'otherEnergyCostsByFuelType': json['otherEnergyCostsByFuelType'] == null ? undefined : OpexWeeklyOtherEnergyCostsByFuelTypeFromJSON(json['otherEnergyCostsByFuelType']),
        'fixedCosts': json['fixedCosts'] == null ? undefined : json['fixedCosts'],
        'fixedCostsByFuelType': json['fixedCostsByFuelType'] == null ? undefined : OpexWeeklyFixedCostsByFuelTypeFromJSON(json['fixedCostsByFuelType']),
        'revenueFromSolarExport': json['revenueFromSolarExport'] == null ? undefined : json['revenueFromSolarExport'],
    };
}

export function OpexWeeklyToJSON(json: any): OpexWeekly {
    return OpexWeeklyToJSONTyped(json, false);
}

export function OpexWeeklyToJSONTyped(value?: OpexWeekly | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'gridVolumeCosts': value['gridVolumeCosts'],
        'otherEnergyCosts': value['otherEnergyCosts'],
        'otherEnergyCostsByFuelType': OpexWeeklyOtherEnergyCostsByFuelTypeToJSON(value['otherEnergyCostsByFuelType']),
        'fixedCosts': value['fixedCosts'],
        'fixedCostsByFuelType': OpexWeeklyFixedCostsByFuelTypeToJSON(value['fixedCostsByFuelType']),
        'revenueFromSolarExport': value['revenueFromSolarExport'],
    };
}

